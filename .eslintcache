[{"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\index.js":"1","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\App.js":"2","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\serviceWorker.js":"3","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\reducers\\auth.js":"4","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\routes.js":"5","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\utility.js":"6","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\actions\\actionTypes.js":"7","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Login.js":"8","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\actions\\auth.js":"9","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Ajout.js":"10","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Encaissement.js":"11","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Menu.js":"12"},{"size":964,"mtime":1611843835973,"results":"13","hashOfConfig":"14"},{"size":676,"mtime":1612620754816,"results":"15","hashOfConfig":"14"},{"size":5086,"mtime":1611843883212,"results":"16","hashOfConfig":"14"},{"size":1334,"mtime":1612471860779,"results":"17","hashOfConfig":"14"},{"size":473,"mtime":1611936568295,"results":"18","hashOfConfig":"14"},{"size":138,"mtime":1611842704320,"results":"19","hashOfConfig":"14"},{"size":159,"mtime":1611842704304,"results":"20","hashOfConfig":"14"},{"size":4896,"mtime":1613650779114,"results":"21","hashOfConfig":"14"},{"size":4545,"mtime":1612470865059,"results":"22","hashOfConfig":"14"},{"size":7610,"mtime":1612542761359,"results":"23","hashOfConfig":"14"},{"size":11504,"mtime":1613399272583,"results":"24","hashOfConfig":"14"},{"size":1354,"mtime":1612542553241,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ayr14h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\index.js",[],["57","58"],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\App.js",["59"],"import { BrowserRouter as Router } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport BaseRouter from './routes';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport * as actions from './store/actions/auth';\n\nfunction App(props) {\n  useEffect(() => {\n    props.onTryAutoSignup();  \n  });\n  return (\n\n  <Router>\n    <BaseRouter />\n  </Router>\n\n  )\n}\n\nconst mapStateToProps = state =>{\n  return{\n    isAuthenticated: state.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    onTryAutoSignup : () => dispatch(actions.authCheckState())\n  }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\serviceWorker.js",[],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\reducers\\auth.js",[],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\routes.js",[],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\utility.js",[],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Login.js",["60","61"],"import React from 'react';\r\nimport {Button,TextField,Grid,InputAdornment} from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { withRouter } from 'react-router-dom';\r\n//import { writeJsonFile } from 'write-json-file';\r\n\r\nclass Login extends React.Component {\r\n  \r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state = {\r\n        nom : \"\",\r\n        password : \"\",\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmits = this.handleSubmits.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      console.log(this.props.userid)\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n      console.log(prevProps.userid)\r\n      console.log(this.props.userid)\r\n      const { history } = this.props;\r\n      if(this.props.userid!=null)\r\n      \r\n        {\r\n          console.log(this.props.loading)\r\n          history.push('/Ajout')\r\n        }\r\n        else{\r\n          console.log(this.props.error)\r\n        }\r\n      \r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ \r\n            // Computed property names \r\n            // keys of the objects are computed dynamically \r\n            [e.target.name] : e.target.value             \r\n          }) ;\r\n          console.log(this.state);\r\n      };\r\n\r\n    handleSubmits(e){\r\n      const { history } = this.props;\r\n        e.preventDefault();\r\n          console.log(this.state);   \r\n        this.props.onAuth(this.state.nom, this.state.password)  \r\n        //history.push('/Ajout') \r\n      };\r\n\r\n    creationjson = () =>{\r\n      let personne = {\r\n        \"prenom\" : \"Marie\",\r\n        \"age\" : 45,\r\n        \"passion\" : \"loisirs cr√©atifs, histoire\",\r\n        \"taille\" : 172\r\n     }\r\n     let donnees = JSON.stringify(personne)\r\n      const element = document.createElement(\"a\");\r\n      const file = new Blob([donnees]);\r\n      element.href = URL.createObjectURL(file);\r\n      element.download = \"myFile.json\";\r\n      document.body.appendChild(element); // Required for this to work in FireFox\r\n      element.click();\r\n      console.log('okay')\r\n    }\r\n\r\n    render(){\r\n        return (\r\n           \r\n            \r\n        \r\n       <div>\r\n           \r\n           <form noValidate autoComplete=\"off\" onSubmit={ this.handleSubmits }>\r\n          <div>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={3} md={3} sm={3} lg={3}></Grid>\r\n              <Grid item xs={6} md={6} sm={6} lg={6}>\r\n                <Grid container spacing={2} style={{marginTop:'100px'}}>\r\n                <TextField \r\n                required \r\n                style={{width:'100%',marginBottom:'50px'}}\r\n                 id=\"standard-required\"\r\n                  label=\"Required\" \r\n                   name=\"nom\" \r\n                   value={this.state.nom}\r\n                    onChange={this.handleChange}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <AccountCircle />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    />\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                <TextField\r\n                style={{width:'100%',marginBottom:'50px'}}\r\n              id=\"standard-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                <Button variant=\"outlined\"\r\n                size=\"large\" color=\"primary\" type=\"submit\" style={{width:'100%',borderRadius: '25px'}}>\r\n                Login\r\n                </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={3} md={3} sm={3} lg={3}></Grid>\r\n            </Grid>\r\n            \r\n            \r\n            \r\n          </div>\r\n        </form>\r\n        \r\n       </div> \r\n        \r\n      \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        loading:state.loading,\r\n        error: state.error ,\r\n        userid:state.userid\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\store\\actions\\auth.js",["62","63"],"import * as actionTypes from './actionTypes';\r\nimport axios from 'axios'\r\nimport fs from 'fs'\r\nimport { withRouter } from 'react-router-dom';\r\nexport const authStart = () => {\r\n    return{\r\n        type:actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = user => {\r\n    return{\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\nexport const authFail = error => {\r\n    return{\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = () =>{\r\n    localStorage.removeItem('user');\r\n    return{\r\n        type:actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\n\r\nexport const checkAuthTimeout = expirationDate => {\r\n    return dispatch => {\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        }, expirationDate * 1000)\r\n    }\r\n}\r\n\r\nexport const authLogin = (username,password) => {\r\n\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        axios.post('https://www.trouvite.com/rest-auth/login/',{\r\n            username:username,\r\n            password:password\r\n        })\r\n        .then(res => {\r\n            const user ={\r\n                token : res.data.key,\r\n                username,\r\n                userid: res.data.user,\r\n                expirationDate : new Date(new Date().getTime() + 3600*100)\r\n            }\r\n            \r\n            const expirationDate = new Date(new Date().getTime() + 3600*100);\r\n            localStorage.setItem('user',JSON.stringify(user));\r\n            dispatch(authSuccess(user));\r\n            dispatch(checkAuthTimeout(3600));\r\n            console.log(res.data)\r\n            let personne = {\r\n                \"prenom\" : \"Marie\",\r\n                \"age\" : 45,\r\n                \"passion\" : \"loisirs cr√©atifs, histoire\",\r\n                \"taille\" : 172\r\n             }\r\n             let donnees = JSON.stringify(personne)\r\n             \r\n             fs.writeFile('personne2.json', donnees, function(erreur) {\r\n                 if (erreur) {\r\n                     console.log(erreur)}\r\n                else{console.log(\"cr√©√©\")}\r\n             })\r\n            \r\n        })\r\n        .catch(err=>{\r\n            dispatch(authFail(err));\r\n            console.log(err.response)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const authSignup = (username,password1, password2) => {\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const user = {\r\n            username,         \r\n            password1,\r\n            password2,\r\n            code:'abcd'\r\n        }\r\n        console.log(user)\r\n        axios.post('https://www.trouvite.com/rest-auth/registration/',user)\r\n        .then(res => {\r\n            const user ={\r\n                token : res.data.key,\r\n                username,\r\n                expirationDate : new Date(new Date().getTime() + 3600*100)\r\n            }\r\n            localStorage.setItem('user',JSON.stringify(user));\r\n            dispatch(authSuccess(user));\r\n            dispatch(checkAuthTimeout(3600))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(authFail(err));\r\n            console.log(err.response);\r\n        })\r\n    }\r\n}\r\n\r\nexport const authSignup2 = (username,code) => {\r\n    return dispatch =>{\r\n        dispatch(authStart());\r\n        const user = {\r\n            username,         \r\n            password1:username+'n',\r\n            password2:username+'n',\r\n            code\r\n\r\n        }\r\n        console.log(user)\r\n        axios.post('https://www.trouvite.com/rest-auth/registration/',user)\r\n        .then(res => {\r\n            const user ={\r\n                token : res.data.key,\r\n                username,\r\n                expirationDate : new Date(new Date().getTime() + 3600*100)\r\n            }\r\n            localStorage.setItem('user',JSON.stringify(user));\r\n            //dispatch(authSuccess(user));\r\n            //dispatch(checkAuthTimeout(3600))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(authFail(err));\r\n            console.log(err.response);\r\n        })\r\n    }\r\n}\r\n\r\nexport const authCheckState = () =>{\r\n    return dispatch =>{\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if(user === undefined || user===null){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(user.expirationDate)\r\n            if(expirationDate<= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                dispatch(authSuccess(user));\r\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime() ) / 1000));\r\n            }\r\n        }\r\n        \r\n    }\r\n}","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Ajout.js",["64","65","66","67","68","69"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from \"axios\";\r\nimport Menu from './Menu';\r\nimport {TextField,Grid,Checkbox,FormControlLabel,RadioGroup,Radio,\r\n    Chip,Button,InputLabel,NativeSelect,FormHelperText,\r\n    MenuItem,Select,FormControl} from '@material-ui/core';\r\n\r\n\r\n\r\nclass Ajout extends React.Component {\r\n  \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            value:'',\r\n            zone : [],\r\n            age:'',\r\n            zoneselec:'',\r\n            secteurselect:'',\r\n            Montant:'',\r\n            activite:'',\r\n            contact:'',\r\n            type:'',\r\n            raison_sociale:'',\r\n            secteur : [],\r\n            };\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(`https://www.trouvite.com/troovite/retrouvezones/`)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    this.setState({\r\n                        zone:res.data\r\n                    },()=>{console.log(this.state.zone)})\r\n                })\r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        const zon = event.target.value;\r\n        const name = event.target.name\r\n        console.log(zon)\r\n        this.setState({\r\n            [name]: event.target.value  \r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const zon = event.target.value;\r\n        const name = event.target.name\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [name]: event.target.value,\r\n           \r\n           \r\n        });\r\n        axios.get(`https://www.trouvite.com/troovite/retrouvesecteur/${zon}`)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    this.setState({\r\n                        secteur: res.data,\r\n                       \r\n                    });\r\n                })\r\n        //console.log(event.target.value[value])\r\n        //const sect = event.target.value\r\n        /*this.setState({\r\n            secteur:['b','h','3','8']\r\n        })*/\r\n      };\r\n\r\n      savecont=()=>{\r\n        axios.post('https://www.trouvite.com/troovite/creationcont/',{\r\n            raison_sociale:this.state.raison_sociale,\r\n            activite:this.state.activite,\r\n            Montant:this.state.Montant,\r\n            contact:this.state.contact,\r\n            type:this.state.type,\r\n            zoneselec:this.state.zoneselec,\r\n            secteurselect:this.state.secteurselect\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response)\r\n        })\r\n      }\r\n\r\n    render(){\r\n        return (\r\n           <div>\r\n              <Menu nompage='Ajout'/>\r\n\r\n                <Grid container spacing={2} style={{marginTop:'40px'}}>\r\n                <Grid item xs={2} md={2} sm={2} lg={2}></Grid>\r\n                <Grid item xs={8} md={8} sm={8} lg={8}>\r\n                    <Grid container spacing={2} style={{ marginBottom:'20px'}}>\r\n                    <Grid item xs={6} md={6} sm={6} lg={6}>\r\n                        <FormControl style={{width:'100%'}} >\r\n                            <NativeSelect\r\n                            //value={this.state.zoneselec}\r\n                            onChange={this.handleChange}\r\n                            name=\"zoneselec\"\r\n                            inputProps={{ 'aria-label': 'zone' }}\r\n                            >\r\n                            <option value=\"\">Zone</option>\r\n                            {\r\n                                this.state.zone.map((number,index) =>\r\n                                (\r\n                                <option key={index} value={number.idzone}>{number.numzone}</option>\r\n                            \r\n                                ))\r\n                            }\r\n                            </NativeSelect>\r\n                            <FormHelperText>With visually hidden label</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6} sm={6} lg={6}>\r\n                        <FormControl style={{width:'100%'}}>\r\n                            <NativeSelect\r\n                            //value={this.state.zoneselec}\r\n                            onChange={this.handleChange2}\r\n                            name=\"secteurselect\"\r\n                            inputProps={{ 'aria-label': 'secteur' }}\r\n                            >\r\n                            <option value=\"\">Secteur</option>\r\n                            {\r\n                                this.state.secteur.map((number,index) =>\r\n                                (\r\n                                <option key={index} value={number.numsecteur} >{number.numsecteur}</option>\r\n                                ))\r\n                            }\r\n                            </NativeSelect>\r\n                            <FormHelperText>With visually hidden label</FormHelperText>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginBottom:'20px'}}>\r\n                        <TextField style={{width:'100%'}} label=\"Nom / Raison sociale\" name=\"raison_sociale\" onChange={this.handleChange2}/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginBottom:'20px'}}>\r\n                        <TextField  style={{width:'100%'}} label=\"Activite\" name=\"activite\" onChange={this.handleChange2}/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginBottom:'20px'}}>\r\n                        <TextField  style={{width:'100%'}} label=\"Montant\" name=\"Montant\" onChange={this.handleChange2}/>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginBottom:'20px'}}>\r\n                        <TextField  style={{width:'100%'}} label=\"Contact\" name=\"contact\" onChange={this.handleChange2}/>\r\n                    </Grid>\r\n\r\n                    <Grid container spacing={2} style={{ marginBottom:'20px'}}>\r\n                        <RadioGroup aria-label=\"gender\" name=\"type\"  onChange={this.handleChange2} style={{width:'100%'}}>\r\n                        <Grid container spacing={2} >\r\n                            <Grid item xs={3} md={3} sm={3} lg={3}></Grid>\r\n                            <Grid item xs={3} md={3} sm={3} lg={3} style={{}}>\r\n                                <FormControlLabel value=\"Jour\" control={<Radio />} label=\"Jour\" />\r\n                            </Grid>\r\n                            <Grid item xs={3} md={3} sm={3} lg={3} style={{}}>\r\n                                <FormControlLabel value=\"Mois\" control={<Radio />} label=\"Mois\" />\r\n                            </Grid>\r\n                            <Grid item xs={3} md={3} sm={3} lg={3}></Grid>\r\n                        </Grid>\r\n                        </RadioGroup>                   \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={12} sm={12} lg={12} style={{ marginBottom:'20px'}}>\r\n                        <Button style={{width:'100%',background:'black',color:'white'}} variant=\"contained\"  type=\"submit\" onClick={this.savecont}>\r\n                        Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={2} md={2} sm={2} lg={2}></Grid>      \r\n                </Grid>\r\n\r\n              \r\n           </div>\r\n        )\r\n    }\r\n\r\n    }\r\n    export default Ajout","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Encaissement.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Menu from './Menu';\r\nimport axios from \"axios\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../store/actions/auth';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {TextField,Grid,Checkbox,FormControlLabel,RadioGroup,Radio,Dialog,DialogActions,DialogContent,\r\n    DialogContentText,DialogTitle,Slide,Chip,Button,InputLabel,NativeSelect,FormHelperText,\r\n    MenuItem,Select,FormControl,withStyles} from '@material-ui/core';\r\n\r\n\r\n\r\nclass Encaissement extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.handleSubmits=this.handleSubmits.bind(this);\r\n        this.state = {\r\n            test:[{matricule:'1'}],\r\n            open:false,\r\n            tabmontant:[],\r\n            value:'',\r\n            zone : [],\r\n            age:'',\r\n            zoneselec:'',\r\n            secteurselect:'',\r\n            Montant:'',\r\n            activite:'',\r\n            contact:'',\r\n            type:'',\r\n            raison_sociale:'',\r\n            secteur : [],\r\n            use_id_auteur:'',\r\n            use_cont_id:'',\r\n            matricule:'',\r\n            matricules:[],\r\n            user:'',\r\n            dialogtext:'',\r\n            showit:true,\r\n            };\r\n    }\r\n\r\n    componentDidMount(){\r\n        //this.props.onTryAutoSignup();\r\n        console.log('ok');\r\n        console.log(this.props.userid)\r\n        this.setState({\r\n            dialogtext:'Encaissement de'+this.state.Montant\r\n        })\r\n        axios.get(`https://www.goblomatrayi.com/goblofinance/retrouvezones/`)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    this.setState({\r\n                        zone:res.data\r\n                    },()=>{console.log(this.state.zone)})\r\n                })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userid !== this.props.userid) {\r\n          var userids=this.props.userid;\r\n          console.log(userids)\r\n          this.setState({\r\n            user: userids,\r\n        },()=>{console.log(this.state.user)});\r\n    }\r\n    if(prevState.Montant!==this.state.Montant){\r\n        this.setState({\r\n            dialogtext:'Encaissement de '+this.state.raison_sociale+' '+this.state.Montant\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n    handleChange2 = (event) => {\r\n        const zon = event.target.value;\r\n        const name = event.target.name\r\n        console.log(zon)\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    handleChange3 = (event) => {\r\n        const zon = event.target.value;\r\n        const name = event.target.name\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [name]: event.target.value,\r\n\r\n\r\n        });\r\n        axios.get(`https://www.goblomatrayi.com/goblofinance/retrouvecontribuable/${zon}`)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    this.setState({\r\n                        matricules: res.data,\r\n                        //tabmontant:this.state.tabmontant.concat({[res.data.matricule]:res.data.montant})\r\n\r\n                    },()=>{\r\n                        console.log(this.state.matricules)\r\n                        console.log(this.state.test)\r\n                        var tzb = Object.entries(this.state.matricules)\r\n                        for ( const [i, v] of tzb){\r\n                            console.log(v)\r\n                            this.setState(prevState => ({\r\n                                tabmontant: [...prevState.tabmontant, {[v.matricule]:v.montant}]\r\n                              }),()=>{\r\n                                console.log(this.state.tabmontant)\r\n                            })\r\n                        }\r\n\r\n                    });\r\n                })\r\n\r\n      };\r\n\r\n    handleChange = (event) => {\r\n        const zon = event.target.value;\r\n        const name = event.target.name\r\n        console.log(event.target.value)\r\n        this.setState({\r\n            [name]: event.target.value,\r\n\r\n\r\n        });\r\n        axios.get(`https://www.goblomatrayi.com/goblofinance/retrouvesecteur/${zon}`)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    this.setState({\r\n                        secteur: res.data,\r\n\r\n                    });\r\n                })\r\n\r\n      };\r\n\r\n\r\n\r\n      savecont=()=>{\r\n\r\n      }\r\n\r\n      handleSubmits(){\r\n        //e.preventDefault();\r\n        console.log(this.props.userid)\r\n        //const userid=this.state.user\r\n        const mat = this.state.matricule\r\n        axios.post('https://www.goblomatrayi.com/goblofinance/encaissement/',{\r\n            use_id_auteur:this.props.userid,\r\n            use_cont_id:mat\r\n\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                //open: false,\r\n                showit:false,\r\n                dialogtext:'Encaissement de Recu n¬∞'+ res.data.Numrecu,\r\n\r\n            });\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response)\r\n        })\r\n      }\r\n\r\n      handleClickOpen = () => {\r\n        this.setState({\r\n            open: true,\r\n        });\r\n      }\r\n\r\n      handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            zoneselec:'',\r\n        });\r\n        window.location.reload(false)\r\n      }\r\n\r\n\r\n\r\n    render(){\r\n        const {classes} = this.props;\r\n        return (\r\n           <div>\r\n          \r\n            <Grid container spacing={1} style={{ marginTop:'30px' }}>\r\n            <Grid item xs={4} md={4} sm={4} lg={5}></Grid>\r\n            <Grid item xs={4} md={4} sm={4} lg={2}>\r\n            \r\n            </Grid>\r\n            <Grid item xs={4} md={4} sm={4} lg={5}></Grid>\r\n            </Grid>\r\n\r\n\r\n            <Grid container spacing={1} style={{marginTop:'40px'}}>\r\n                <Grid item xs={1} md={2} sm={2} lg={2}></Grid>\r\n                <Grid item xs={10} md={8} sm={8} lg={8} style={{}}>\r\n\r\n                <Grid container spacing={2} style={{ marginBottom:'20px'}}>\r\n                        <Grid item xs={6} md={6} sm={6} lg={6} style={{}}>\r\n                            <FormControl  style={{width:'100%'}} >\r\n                                <NativeSelect\r\n                                value={this.state.zoneselec}\r\n                                onChange={this.handleChange}\r\n                                name=\"zoneselec\"\r\n                                inputProps={{ 'aria-label': 'zone' }}\r\n                                >\r\n                                <option value=\"\">Zone</option>\r\n                                {\r\n                                    this.state.zone.map((number,index) =>\r\n                                    (\r\n                                    <option key={index} value={number.idzone}>{number.numzone}</option>\r\n\r\n                                    ))\r\n                                }\r\n                                </NativeSelect>\r\n                                <FormHelperText>Choisir la zone</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6} md={6} sm={6} lg={6} style={{}}>\r\n                            <FormControl style={{width:'100%'}} >\r\n                                <NativeSelect\r\n                                value={this.state.secteurselect}\r\n                                onChange={this.handleChange3}\r\n                                name=\"secteurselect\"\r\n                                inputProps={{ 'aria-label': 'secteur' }}\r\n                                >\r\n                                <option value=\"\">Secteur</option>\r\n                                {\r\n                                    this.state.secteur.map((number,index) =>\r\n                                    (\r\n                                    <option key={index} value={number.numsecteur} >{number.numsecteur}</option>\r\n                                    ))\r\n                                }\r\n                                </NativeSelect>\r\n                                <FormHelperText>Choisir le secteur</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    <Grid item xs={12}  style={{}}>\r\n\r\n\r\n                        <Autocomplete\r\n                            style={{width:'100%',marginBottom:'80px'}}\r\n                            onInputChange={(e)=>{console.log(e)}}\r\n                            id=\"free-solo-demo\"\r\n                            /*onChange={(event, newValue) => {\r\n                                console.log(newValue);\r\n                                console.log(newValue.montant);\r\n                                this.setState({\r\n                                    matricule: newValue.matricule,\r\n                                    Montant:newValue.montant,\r\n                                    raison_sociale:newValue.nom\r\n                                });\r\n                              }}*/\r\n\r\n\r\n                            freeSolo\r\n                            options={this.state.test.map((option) => option.matricule)}\r\n                            //getOptionLabel={(option) => option.matricule}\r\n                            //getOptionLabel={option => option.matricule}\r\n                            //renderOption={option => <>{option.matricule}</>}\r\n                            renderInput={(params) => (\r\n                            <TextField {...params} InputProps={{\r\n                                \r\n                                className: classes.TheInput\r\n                              }} label=\"Matricule\" margin=\"dense\" style={{ height: 38 }} name=\"matricule\"  margin=\"normal\" variant=\"outlined\"  />\r\n                            )}\r\n                        />\r\n\r\n\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"Validation\"}</DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                               {this.state.dialogtext}\r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            {this.state.showit ? <Button onClick={this.handleSubmits} color=\"primary\" autoFocus>Valider</Button> : <div></div>}\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                               Fermer\r\n                            </Button>\r\n\r\n                            </DialogActions>\r\n                        </Dialog>\r\n\r\n\r\n                    </Grid>\r\n                    {this.state.test.map((option,index) => <div>{option.matricule}</div>)}\r\n            </Grid>\r\n            <Grid item xs={1} md={2} sm={2} lg={2}>{this.props.userid}  </Grid>\r\n\r\n            </Grid>\r\n           </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n    const styles = theme => ({\r\n        TheInput: {\r\n            fontSize: 30,\r\n            lineHeight: 2.4\r\n        }\r\n    })\r\n\r\n\r\n\r\n    export default withStyles(styles)(Encaissement);","C:\\Users\\Orlando Djama\\Desktop\\trooviteapp\\goblofinance\\src\\containers\\Menu.js",["85"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Menu(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background:'white',boxShadow:'none'}}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color='primary' aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} color=\"primary\" style={{background:'red',textAlign:'center'}}>\r\n            \r\n            {props.nompage}\r\n          </Typography>\r\n\r\n          <IconButton edge=\"end\" color=\"primary\">\r\n            <MoreIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"94","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":20},{"ruleId":"90","severity":1,"message":"95","line":54,"column":15,"nodeType":"92","messageId":"93","endLine":54,"endColumn":22},{"ruleId":"90","severity":1,"message":"94","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":20},{"ruleId":"90","severity":1,"message":"96","line":58,"column":19,"nodeType":"92","messageId":"93","endLine":58,"endColumn":33},{"ruleId":"90","severity":1,"message":"97","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"98","line":5,"column":24,"nodeType":"92","messageId":"93","endLine":5,"endColumn":32},{"ruleId":"90","severity":1,"message":"99","line":6,"column":5,"nodeType":"92","messageId":"93","endLine":6,"endColumn":9},{"ruleId":"90","severity":1,"message":"100","line":6,"column":17,"nodeType":"92","messageId":"93","endLine":6,"endColumn":27},{"ruleId":"90","severity":1,"message":"101","line":7,"column":5,"nodeType":"92","messageId":"93","endLine":7,"endColumn":13},{"ruleId":"90","severity":1,"message":"102","line":7,"column":14,"nodeType":"92","messageId":"93","endLine":7,"endColumn":20},{"ruleId":"90","severity":1,"message":"97","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"103","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":12},{"ruleId":"90","severity":1,"message":"104","line":7,"column":9,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"105","line":8,"column":13,"nodeType":"92","messageId":"93","endLine":8,"endColumn":20},{"ruleId":"90","severity":1,"message":"98","line":10,"column":24,"nodeType":"92","messageId":"93","endLine":10,"endColumn":32},{"ruleId":"90","severity":1,"message":"106","line":10,"column":33,"nodeType":"92","messageId":"93","endLine":10,"endColumn":49},{"ruleId":"90","severity":1,"message":"107","line":10,"column":50,"nodeType":"92","messageId":"93","endLine":10,"endColumn":60},{"ruleId":"90","severity":1,"message":"108","line":10,"column":61,"nodeType":"92","messageId":"93","endLine":10,"endColumn":66},{"ruleId":"90","severity":1,"message":"109","line":11,"column":35,"nodeType":"92","messageId":"93","endLine":11,"endColumn":40},{"ruleId":"90","severity":1,"message":"99","line":11,"column":41,"nodeType":"92","messageId":"93","endLine":11,"endColumn":45},{"ruleId":"90","severity":1,"message":"100","line":11,"column":53,"nodeType":"92","messageId":"93","endLine":11,"endColumn":63},{"ruleId":"90","severity":1,"message":"101","line":12,"column":5,"nodeType":"92","messageId":"93","endLine":12,"endColumn":13},{"ruleId":"90","severity":1,"message":"102","line":12,"column":14,"nodeType":"92","messageId":"93","endLine":12,"endColumn":20},{"ruleId":"90","severity":1,"message":"110","line":109,"column":38,"nodeType":"92","messageId":"93","endLine":109,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":278,"column":108,"nodeType":"113","endLine":278,"endColumn":123},{"ruleId":"90","severity":1,"message":"114","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'withRouter' is defined but never used.","'history' is assigned a value but never used.","'expirationDate' is assigned a value but never used.","'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","'Chip' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Menu' is defined but never used.","'connect' is defined but never used.","'actions' is defined but never used.","'FormControlLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Slide' is defined but never used.","'i' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]